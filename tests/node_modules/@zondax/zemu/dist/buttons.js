"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TouchElements = exports.tapContinueButton = exports.dummyButton = void 0;
exports.dummyButton = {
    x: 0,
    y: 0,
    delay: 0,
};
const infoButton = {
    x: 335,
    y: 65,
    delay: 0.25,
};
const quitAppButton = {
    x: 0,
    y: 0,
    delay: 0.25,
};
exports.tapContinueButton = {
    x: 200,
    y: 250,
    delay: 0.25,
};
const prevPageButton = {
    x: 45,
    y: 45,
    delay: 0.25,
};
const toggleOption1 = {
    x: 350,
    y: 125,
    delay: 0.25,
};
const toggleOption2 = {
    x: 350,
    y: 200,
    delay: 0.25,
};
const toggleOption3 = {
    x: 350,
    y: 250,
    delay: 0.25,
};
const navRightButton = {
    x: 300,
    y: 625,
    delay: 0.25,
};
const navLeftButton = {
    x: 140,
    y: 625,
    delay: 0.25,
};
const quitSettingsButton = {
    x: 50,
    y: 625,
    delay: 0.25,
};
const approveTapButton = {
    x: 200,
    y: 550,
    delay: 0.25,
};
const approveHoldButton = {
    x: 335,
    y: 525,
    delay: 5,
};
const rejectButton = {
    x: 200,
    y: 650,
    delay: 0.25,
};
const confirmYesButton = {
    x: 200,
    y: 550,
    delay: 0.25,
};
const confirmNoButton = {
    x: 200,
    y: 650,
    delay: 0.25,
};
const showQRButton = {
    x: 200,
    y: 300,
    delay: 0.25,
};
const closeQRButton = {
    x: 200,
    y: 650,
    delay: 0.25,
};
exports.TouchElements = new Map([
    [0 /* ButtonKind.InfoButton */, infoButton],
    [1 /* ButtonKind.QuitAppButton */, quitAppButton],
    [2 /* ButtonKind.TapContinueButton */, exports.tapContinueButton],
    [3 /* ButtonKind.PrevPageButton */, prevPageButton],
    [4 /* ButtonKind.ToggleSettingButton1 */, toggleOption1],
    [5 /* ButtonKind.ToggleSettingButton2 */, toggleOption2],
    [6 /* ButtonKind.ToggleSettingButton3 */, toggleOption3],
    [7 /* ButtonKind.NavRightButton */, navRightButton],
    [8 /* ButtonKind.NavLeftButton */, navLeftButton],
    [9 /* ButtonKind.QuitSettingsButton */, quitSettingsButton],
    [10 /* ButtonKind.ApproveHoldButton */, approveHoldButton],
    [11 /* ButtonKind.ApproveTapButton */, approveTapButton],
    [12 /* ButtonKind.RejectButton */, rejectButton],
    [13 /* ButtonKind.ConfirmYesButton */, confirmYesButton],
    [14 /* ButtonKind.ConfirmNoButton */, confirmNoButton],
    [15 /* ButtonKind.ShowQRButton */, showQRButton],
    [16 /* ButtonKind.CloseQRButton */, closeQRButton],
]);
