var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
import Transport from "@ledgerhq/hw-transport";
/**
 * decorate a real transport and proxy it to record the APDUs.
 * @param {Transport} DecoratedTransport: an actual transport class. Like @ledgerhq/hw-transport-webusb
 * @param {RecordStore} recordStore: a record store to record the apdu in.
 */
var createTransportRecorder = function (DecoratedTransport, recordStore) {
    var TransportRecorder = /** @class */ (function (_super) {
        __extends(TransportRecorder, _super);
        function TransportRecorder(t) {
            var _this = _super.call(this) || this;
            _this.transport = t;
            return _this;
        }
        TransportRecorder.prototype.setScrambleKey = function () { };
        TransportRecorder.prototype.close = function () {
            return this.transport.close();
        };
        TransportRecorder.prototype.exchange = function (apdu) {
            var output = this.transport.exchange(apdu);
            output.then(function (out) {
                recordStore.recordExchange(apdu, out);
            });
            return output;
        };
        TransportRecorder.recordStore = recordStore;
        TransportRecorder.isSupported = DecoratedTransport.constructor
            .isSupported;
        TransportRecorder.list = DecoratedTransport.constructor.list;
        TransportRecorder.listen = DecoratedTransport.constructor.listen;
        TransportRecorder.open = function (descriptor) {
            var _a;
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            return (_a = DecoratedTransport.constructor)
                .open.apply(_a, __spreadArray([descriptor], __read(args), false)).then(function (t) { return new TransportRecorder(t); });
        };
        return TransportRecorder;
    }(Transport));
    return TransportRecorder;
};
export default createTransportRecorder;
//# sourceMappingURL=createTransportRecorder.js.map