/// <reference types="node" />
import Transport from "@ledgerhq/hw-transport";
declare global {
    namespace NodeJS {
        interface Global {
            WebSocket?: WebSocket;
        }
    }
}
/**
 * WebSocket transport implementation
 */
export default class WebSocketTransport extends Transport {
    static isSupported: () => Promise<boolean>;
    static list: () => any;
    static listen: (_observer: any) => {
        unsubscribe: () => void;
    };
    static check: (url: string, timeout?: number) => Promise<unknown>;
    static open(url: string): Promise<WebSocketTransport>;
    hook: any;
    constructor(hook: any);
    exchange(apdu: Buffer): Promise<Buffer>;
    setScrambleKey(): void;
    close(): Promise<void>;
}
//# sourceMappingURL=WebSocketTransport.d.ts.map